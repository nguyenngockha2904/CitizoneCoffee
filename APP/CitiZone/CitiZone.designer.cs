#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CitiZone
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CitiZone")]
	public partial class CitiZoneDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void Insertfood(food instance);
    partial void Updatefood(food instance);
    partial void Deletefood(food instance);
    partial void InsertbillInfo(billInfo instance);
    partial void UpdatebillInfo(billInfo instance);
    partial void DeletebillInfo(billInfo instance);
    partial void Insertbill(bill instance);
    partial void Updatebill(bill instance);
    partial void Deletebill(bill instance);
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void InsertcoffeeTable(coffeeTable instance);
    partial void UpdatecoffeeTable(coffeeTable instance);
    partial void DeletecoffeeTable(coffeeTable instance);
    #endregion
		
		public CitiZoneDataContext() : 
				base(global::CitiZone.Properties.Settings.Default.CitiZoneConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public CitiZoneDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CitiZoneDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CitiZoneDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CitiZoneDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<food> foods
		{
			get
			{
				return this.GetTable<food>();
			}
		}
		
		public System.Data.Linq.Table<billInfo> billInfos
		{
			get
			{
				return this.GetTable<billInfo>();
			}
		}
		
		public System.Data.Linq.Table<bill> bills
		{
			get
			{
				return this.GetTable<bill>();
			}
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<coffeeTable> coffeeTables
		{
			get
			{
				return this.GetTable<coffeeTable>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.addAccounts")]
		public int addAccounts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string position)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, position);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateInfoAccounts")]
		public int updateInfoAccounts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string fullname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> birthday, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(200)")] string pictureLocation)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, fullname, birthday, address, phone, pictureLocation);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.addBillInfo")]
		public int addBillInfo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> foodID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> billID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> total)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), foodID, billID, amount, total);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.addBills")]
		public int addBills([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string billName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> billDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, billName, billDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.addCategories")]
		public int addCategories([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string categoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string categoryName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryID, categoryName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.addFoods")]
		public int addFoods([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string foodname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string categoryID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), foodname, price, categoryID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteAccounts")]
		public int deleteAccounts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteBillInfo")]
		public int deleteBillInfo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> billID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteBills")]
		public int deleteBills([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> billID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteBillsByUsername")]
		public int deleteBillsByUsername([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteCategories")]
		public int deleteCategories([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string categoryID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteFoods")]
		public int deleteFoods([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> foodID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), foodID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteFoodsByCategories")]
		public int deleteFoodsByCategories([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string categoryID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchBillinfosByBillID")]
		public ISingleResult<SearchBillinfosByBillIDResult> SearchBillinfosByBillID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> billID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billID);
			return ((ISingleResult<SearchBillinfosByBillIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.searchBills")]
		public ISingleResult<searchBillsResult> searchBills([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> billID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string billName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billID, billName);
			return ((ISingleResult<searchBillsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateAccounts")]
		public int updateAccounts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string position)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, position);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateBills")]
		public int updateBills([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> billID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> total)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billID, total);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateCategories")]
		public int updateCategories([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string categoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string categoryName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryID, categoryName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateCoffeeTable")]
		public int updateCoffeeTable([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tableID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> billID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableID, billID, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateFoods")]
		public int updateFoods([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> foodID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string foodname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> price)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), foodID, foodname, price);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.accounts")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private string _fullname;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _address;
		
		private System.Nullable<int> _phone;
		
		private string _position;
		
		private string _pictureLocation;
		
		private EntitySet<bill> _bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(System.Nullable<int> value);
    partial void OnphoneChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void OnpictureLocationChanging(string value);
    partial void OnpictureLocationChanged();
    #endregion
		
		public account()
		{
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullname", DbType="NVarChar(50)")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if ((this._fullname != value))
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Int")]
		public System.Nullable<int> phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pictureLocation", DbType="NVarChar(200)")]
		public string pictureLocation
		{
			get
			{
				return this._pictureLocation;
			}
			set
			{
				if ((this._pictureLocation != value))
				{
					this.OnpictureLocationChanging(value);
					this.SendPropertyChanging();
					this._pictureLocation = value;
					this.SendPropertyChanged("pictureLocation");
					this.OnpictureLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_bill", Storage="_bills", ThisKey="username", OtherKey="username")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.foods")]
	public partial class food : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _foodID;
		
		private string _foodName;
		
		private System.Nullable<int> _price;
		
		private string _categoryID;
		
		private EntitySet<billInfo> _billInfos;
		
		private EntityRef<category> _category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfoodIDChanging(int value);
    partial void OnfoodIDChanged();
    partial void OnfoodNameChanging(string value);
    partial void OnfoodNameChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void OncategoryIDChanging(string value);
    partial void OncategoryIDChanged();
    #endregion
		
		public food()
		{
			this._billInfos = new EntitySet<billInfo>(new Action<billInfo>(this.attach_billInfos), new Action<billInfo>(this.detach_billInfos));
			this._category = default(EntityRef<category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int foodID
		{
			get
			{
				return this._foodID;
			}
			set
			{
				if ((this._foodID != value))
				{
					this.OnfoodIDChanging(value);
					this.SendPropertyChanging();
					this._foodID = value;
					this.SendPropertyChanged("foodID");
					this.OnfoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodName", DbType="NVarChar(50)")]
		public string foodName
		{
			get
			{
				return this._foodName;
			}
			set
			{
				if ((this._foodName != value))
				{
					this.OnfoodNameChanging(value);
					this.SendPropertyChanging();
					this._foodName = value;
					this.SendPropertyChanged("foodName");
					this.OnfoodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="NVarChar(50)")]
		public string categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="food_billInfo", Storage="_billInfos", ThisKey="foodID", OtherKey="foodID")]
		public EntitySet<billInfo> billInfos
		{
			get
			{
				return this._billInfos;
			}
			set
			{
				this._billInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_food", Storage="_category", ThisKey="categoryID", OtherKey="categoryID", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.foods.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.foods.Add(this);
						this._categoryID = value.categoryID;
					}
					else
					{
						this._categoryID = default(string);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_billInfos(billInfo entity)
		{
			this.SendPropertyChanging();
			entity.food = this;
		}
		
		private void detach_billInfos(billInfo entity)
		{
			this.SendPropertyChanging();
			entity.food = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.billInfo")]
	public partial class billInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _foodID;
		
		private int _billID;
		
		private System.Nullable<int> _amount;
		
		private System.Nullable<int> _total;
		
		private EntityRef<food> _food;
		
		private EntityRef<bill> _bill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfoodIDChanging(int value);
    partial void OnfoodIDChanged();
    partial void OnbillIDChanging(int value);
    partial void OnbillIDChanged();
    partial void OnamountChanging(System.Nullable<int> value);
    partial void OnamountChanged();
    partial void OntotalChanging(System.Nullable<int> value);
    partial void OntotalChanged();
    #endregion
		
		public billInfo()
		{
			this._food = default(EntityRef<food>);
			this._bill = default(EntityRef<bill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int foodID
		{
			get
			{
				return this._foodID;
			}
			set
			{
				if ((this._foodID != value))
				{
					if (this._food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfoodIDChanging(value);
					this.SendPropertyChanging();
					this._foodID = value;
					this.SendPropertyChanged("foodID");
					this.OnfoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int billID
		{
			get
			{
				return this._billID;
			}
			set
			{
				if ((this._billID != value))
				{
					if (this._bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbillIDChanging(value);
					this.SendPropertyChanging();
					this._billID = value;
					this.SendPropertyChanged("billID");
					this.OnbillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int")]
		public System.Nullable<int> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Int")]
		public System.Nullable<int> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="food_billInfo", Storage="_food", ThisKey="foodID", OtherKey="foodID", IsForeignKey=true)]
		public food food
		{
			get
			{
				return this._food.Entity;
			}
			set
			{
				food previousValue = this._food.Entity;
				if (((previousValue != value) 
							|| (this._food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._food.Entity = null;
						previousValue.billInfos.Remove(this);
					}
					this._food.Entity = value;
					if ((value != null))
					{
						value.billInfos.Add(this);
						this._foodID = value.foodID;
					}
					else
					{
						this._foodID = default(int);
					}
					this.SendPropertyChanged("food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bill_billInfo", Storage="_bill", ThisKey="billID", OtherKey="billID", IsForeignKey=true)]
		public bill bill
		{
			get
			{
				return this._bill.Entity;
			}
			set
			{
				bill previousValue = this._bill.Entity;
				if (((previousValue != value) 
							|| (this._bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bill.Entity = null;
						previousValue.billInfos.Remove(this);
					}
					this._bill.Entity = value;
					if ((value != null))
					{
						value.billInfos.Add(this);
						this._billID = value.billID;
					}
					else
					{
						this._billID = default(int);
					}
					this.SendPropertyChanged("bill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bills")]
	public partial class bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _billID;
		
		private string _username;
		
		private string _billName;
		
		private System.Nullable<System.DateTime> _billDate;
		
		private System.Nullable<int> _total;
		
		private EntitySet<billInfo> _billInfos;
		
		private EntitySet<coffeeTable> _coffeeTables;
		
		private EntityRef<account> _account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbillIDChanging(int value);
    partial void OnbillIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnbillNameChanging(string value);
    partial void OnbillNameChanged();
    partial void OnbillDateChanging(System.Nullable<System.DateTime> value);
    partial void OnbillDateChanged();
    partial void OntotalChanging(System.Nullable<int> value);
    partial void OntotalChanged();
    #endregion
		
		public bill()
		{
			this._billInfos = new EntitySet<billInfo>(new Action<billInfo>(this.attach_billInfos), new Action<billInfo>(this.detach_billInfos));
			this._coffeeTables = new EntitySet<coffeeTable>(new Action<coffeeTable>(this.attach_coffeeTables), new Action<coffeeTable>(this.detach_coffeeTables));
			this._account = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int billID
		{
			get
			{
				return this._billID;
			}
			set
			{
				if ((this._billID != value))
				{
					this.OnbillIDChanging(value);
					this.SendPropertyChanging();
					this._billID = value;
					this.SendPropertyChanged("billID");
					this.OnbillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(20)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billName", DbType="NVarChar(50)")]
		public string billName
		{
			get
			{
				return this._billName;
			}
			set
			{
				if ((this._billName != value))
				{
					this.OnbillNameChanging(value);
					this.SendPropertyChanging();
					this._billName = value;
					this.SendPropertyChanged("billName");
					this.OnbillNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> billDate
		{
			get
			{
				return this._billDate;
			}
			set
			{
				if ((this._billDate != value))
				{
					this.OnbillDateChanging(value);
					this.SendPropertyChanging();
					this._billDate = value;
					this.SendPropertyChanged("billDate");
					this.OnbillDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Int")]
		public System.Nullable<int> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bill_billInfo", Storage="_billInfos", ThisKey="billID", OtherKey="billID")]
		public EntitySet<billInfo> billInfos
		{
			get
			{
				return this._billInfos;
			}
			set
			{
				this._billInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bill_coffeeTable", Storage="_coffeeTables", ThisKey="billID", OtherKey="billID")]
		public EntitySet<coffeeTable> coffeeTables
		{
			get
			{
				return this._coffeeTables;
			}
			set
			{
				this._coffeeTables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_bill", Storage="_account", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_billInfos(billInfo entity)
		{
			this.SendPropertyChanging();
			entity.bill = this;
		}
		
		private void detach_billInfos(billInfo entity)
		{
			this.SendPropertyChanging();
			entity.bill = null;
		}
		
		private void attach_coffeeTables(coffeeTable entity)
		{
			this.SendPropertyChanging();
			entity.bill = this;
		}
		
		private void detach_coffeeTables(coffeeTable entity)
		{
			this.SendPropertyChanging();
			entity.bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.categories")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _categoryID;
		
		private string _categoryName;
		
		private EntitySet<food> _foods;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncategoryIDChanging(string value);
    partial void OncategoryIDChanged();
    partial void OncategoryNameChanging(string value);
    partial void OncategoryNameChanged();
    #endregion
		
		public category()
		{
			this._foods = new EntitySet<food>(new Action<food>(this.attach_foods), new Action<food>(this.detach_foods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string categoryID
		{
			get
			{
				return this._categoryID;
			}
			set
			{
				if ((this._categoryID != value))
				{
					this.OncategoryIDChanging(value);
					this.SendPropertyChanging();
					this._categoryID = value;
					this.SendPropertyChanged("categoryID");
					this.OncategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryName", DbType="NVarChar(50)")]
		public string categoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				if ((this._categoryName != value))
				{
					this.OncategoryNameChanging(value);
					this.SendPropertyChanging();
					this._categoryName = value;
					this.SendPropertyChanged("categoryName");
					this.OncategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_food", Storage="_foods", ThisKey="categoryID", OtherKey="categoryID")]
		public EntitySet<food> foods
		{
			get
			{
				return this._foods;
			}
			set
			{
				this._foods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_foods(food entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_foods(food entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.coffeeTable")]
	public partial class coffeeTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tableID;
		
		private System.Nullable<int> _billID;
		
		private string _status;
		
		private EntityRef<bill> _bill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntableIDChanging(int value);
    partial void OntableIDChanged();
    partial void OnbillIDChanging(System.Nullable<int> value);
    partial void OnbillIDChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public coffeeTable()
		{
			this._bill = default(EntityRef<bill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tableID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int tableID
		{
			get
			{
				return this._tableID;
			}
			set
			{
				if ((this._tableID != value))
				{
					this.OntableIDChanging(value);
					this.SendPropertyChanging();
					this._tableID = value;
					this.SendPropertyChanged("tableID");
					this.OntableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billID", DbType="Int")]
		public System.Nullable<int> billID
		{
			get
			{
				return this._billID;
			}
			set
			{
				if ((this._billID != value))
				{
					if (this._bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbillIDChanging(value);
					this.SendPropertyChanging();
					this._billID = value;
					this.SendPropertyChanged("billID");
					this.OnbillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(10)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bill_coffeeTable", Storage="_bill", ThisKey="billID", OtherKey="billID", IsForeignKey=true)]
		public bill bill
		{
			get
			{
				return this._bill.Entity;
			}
			set
			{
				bill previousValue = this._bill.Entity;
				if (((previousValue != value) 
							|| (this._bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bill.Entity = null;
						previousValue.coffeeTables.Remove(this);
					}
					this._bill.Entity = value;
					if ((value != null))
					{
						value.coffeeTables.Add(this);
						this._billID = value.billID;
					}
					else
					{
						this._billID = default(Nullable<int>);
					}
					this.SendPropertyChanged("bill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SearchBillinfosByBillIDResult
	{
		
		private string _foodName;
		
		private System.Nullable<int> _amount;
		
		private System.Nullable<int> _price;
		
		public SearchBillinfosByBillIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodName", DbType="NVarChar(50)")]
		public string foodName
		{
			get
			{
				return this._foodName;
			}
			set
			{
				if ((this._foodName != value))
				{
					this._foodName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int")]
		public System.Nullable<int> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
	}
	
	public partial class searchBillsResult
	{
		
		private int _billID;
		
		private string _username;
		
		private string _billName;
		
		private System.Nullable<System.DateTime> _billDate;
		
		private System.Nullable<int> _total;
		
		public searchBillsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billID", DbType="Int NOT NULL")]
		public int billID
		{
			get
			{
				return this._billID;
			}
			set
			{
				if ((this._billID != value))
				{
					this._billID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(20)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billName", DbType="NVarChar(50)")]
		public string billName
		{
			get
			{
				return this._billName;
			}
			set
			{
				if ((this._billName != value))
				{
					this._billName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> billDate
		{
			get
			{
				return this._billDate;
			}
			set
			{
				if ((this._billDate != value))
				{
					this._billDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Int")]
		public System.Nullable<int> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this._total = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
